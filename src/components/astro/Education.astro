---
import TimelineItem from '@/ui/TimelineItem.svelte';
import MotionWrapper from '@/motion/MotionWrapper.svelte';
import MotionDiv from '@/motion/MotionDiv.svelte';
import HtmlElement from '@/ui/HtmlElement.svelte';
import type {
	CertificationResponse,
} from '@/contentful/types';

const {
	certifications,
} = Astro.props
---

<style lang="postcss">
	@reference "@/styles/global.css";

	#education {
		@apply from-muted/10 to-background bg-gradient-to-b py-12;

		> div {
			@apply container mx-auto max-w-4xl px-6 md:px-4;
		}

		h2 {
			@apply mb-8 text-center text-2xl font-bold md:text-left;
		}

		.certs-wrapper {
			@apply mb-8;
		}
	}
</style>

<section id="education">
	<div>
		<MotionWrapper client:only='svelte'>
			<h2>Education</h2>
		</MotionWrapper>

		<div class="certs-wrapper">
			{certifications.map(
				(
					certification: CertificationResponse, index: number,
				) => (
					<TimelineItem
						title={`🎓 ${certification.certification}`}
						subtitle={`🏛️ ${certification.institutionName}`}
						subtitleHref={certification.institutionWebsiteUrl}
						location={certification.institutionLocation}
						locationHref={certification.institutionGoogleMapsUrl}
						date={certification.timePeriod}
						isLast={index === certifications.length - 1}
					{index}
					key={`${certification.institutionName}${certification.timePeriod}${index}`}
					client:only='svelte'
					>
						<MotionDiv
							class="bg-background/80 dark:bg-card/10 mt-3 rounded-lg border border-yellow-500/20 p-4 shadow-sm backdrop-blur-sm backdrop-filter dark:border-yellow-500/10"
							initial={{
								opacity: 0,
								y: 20,
							}}
							whileInView={{
								opacity: 1,
								y: 0,
							}}
							transition={{
								duration: 0.5,
								delay: 0.2,
							}}
							viewport={{
								once: true,
							}}
							client:only='svelte'
						>
							<HtmlElement content={certification.description} client:only='svelte' />
						</MotionDiv>
					</TimelineItem>
				),
			)}
		</div>
	</div>
</section>
