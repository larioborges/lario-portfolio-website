---
import TimelineItem from '@/ui/TimelineItem.svelte';
import MotionWrapper from '@/motion/MotionWrapper.svelte';
import MotionDiv from '@/motion/MotionDiv.svelte';
import MotionSpan from '@/motion/MotionSpan.svelte';
import HtmlElement from '@/ui/HtmlElement.svelte';
import type {
	PastEmployerResponse,
} from '@/contentful/types';

const {
	pastEmployers,
} = Astro.props;
---

<style>
	@reference "../../styles/global.css";

	#experience {
		@apply from-muted/20 to-background bg-gradient-to-b py-12;

		> div {
			@apply container mx-auto max-w-4xl px-6 md:px-4;
		}
	}
</style>

<section
	id="experience"
>
	<div>
		<MotionWrapper client:only='svelte'>
			<h2
				class="mb-8 flex items-center text-center text-2xl font-bold md:inline-block md:text-left"
			>
				<MotionSpan
					class="mr-2 inline-block"
					initial={{
						rotate: 0,
					}}
					whileInView={{
						rotate: [0, -10, 10, -5, 5, 0],
					}}
					transition={{
						duration: 0.3,
						delay: 0.1,
					}}
					viewport={{
						once: true,
					}}
					client:only='svelte'
				>
					💼
				</MotionSpan>&nbsp; Employment History
			</h2>
		</MotionWrapper>
		<div class="mb-8">
			{pastEmployers.map(
				(
					{
						companyName, companyWebsiteUrl, companyLocation, companyGoogleMapsUrl, period, position, description,
					}:PastEmployerResponse, index: number,
				) => (
					<TimelineItem
						title={`👨‍💻 ${position}`}
						subtitle={companyName}
						subtitleHref={companyWebsiteUrl}
						location={companyLocation}
						locationHref={companyGoogleMapsUrl}
						date={`${period}`}
						isLast={index === pastEmployers.length - 1}
					{index}
					key={`${companyName}-${period}-${index}`}
					client:only='svelte'
					>
						<MotionDiv
							class="bg-background/80 dark:bg-card/10 mt-3 rounded-lg border border-yellow-500/20 p-4 shadow-sm backdrop-blur-sm backdrop-filter dark:border-yellow-500/10"
							initial={{
								opacity: 0,
								y: 20,
							}}
							whileInView={{
								opacity: 1,
								y: 0,
							}}
							transition={{
								duration: 0.3,
								delay: 0.1,
							}}
							viewport={{
								once: true,
							}}
							client:only='svelte'
						>
							<HtmlElement client:only='svelte' content={description} />
						</MotionDiv>
					</TimelineItem>
				),
			)}
		</div>
	</div>
</section>
